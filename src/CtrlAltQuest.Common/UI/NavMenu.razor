@rendermode InteractiveServer
@inject SessionProperties _sessProps;

<MudAppBar>
    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
    <MudLink Href="/" Typo="Typo.h6" Color="Color.Inherit" Underline="Underline.None">@Title</MudLink>
</MudAppBar>
<MudDrawer @bind-Open="@_drawerOpen" Elevation="2">
    <MudNavMenu>
        <MudNavLink Href="/" Match="NavLinkMatch.All">Dashboard</MudNavLink>
        <MudNavLink Href="/character" Match="NavLinkMatch.All">Character</MudNavLink>
        <MudNavLink Href="/about"  Match="NavLinkMatch.Prefix">About</MudNavLink>
    </MudNavMenu>
</MudDrawer>

@code {
    protected override void OnInitialized()
    {
        _sessProps.TitleChanged = () =>
        {
            if (!string.IsNullOrEmpty(_sessProps.AdditionalTitle))
            {
                Title = $"Ctrl Alt Quest : {_sessProps.AdditionalTitle}";
            }
            else
            {
                Title = "Ctrl Alt Quest";
            }
            this.InvokeAsync(StateHasChanged);
        };
        base.OnInitialized();
    }

    private string Title { get; set; } = "Ctrl Alt Quest";
    bool _drawerOpen = true;

    public void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}